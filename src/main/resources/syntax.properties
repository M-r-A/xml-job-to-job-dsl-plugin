syntax.job = %s("%s") {%n%s}%n%n
syntax.method = def %s(%s) {%nreturn {%n%s%n}%n}%n%n
syntax.method_param = %s, 
syntax.method_call = %s(%s)%n
syntax.method_call_subsequent = << %s(%s)
syntax.method_call_closure = %s(%s) {%n%s%n}%n
syntax.tab = \t
syntax.object_with_name = %s {%n%s}%n
syntax.object = {%n%s}%n
syntax.object_init = {%n%s
syntax.object_end = %s}%n
syntax.object_def = def %s = {%n%s}%n
syntax.property = %s %s
syntax.string_variable = def String %s = '''%s'''%n
syntax.int_variable = def int %s = '%s'
syntax.check_env_variable = if (binding.variables.%s) {%n%s = binding.variables.%s%n}%n%n
